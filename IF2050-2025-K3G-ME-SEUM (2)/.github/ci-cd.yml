name: ME-SEUM CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test and Code Coverage
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Compile project
      run: mvn clean compile
    
    - name: Run unit tests
      run: mvn test
    
    - name: Generate test report
      run: mvn surefire-report:report
    
    - name: Generate code coverage report
      run: mvn jacoco:report
    
    - name: Upload test results
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Maven Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: target/site/jacoco/jacoco.xml
        flags: unittests
        name: codecov-umbrella

  build:
    needs: test
    runs-on: ubuntu-latest
    name: Build Application
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Build with Maven
      run: mvn clean package -DskipTests
    
    - name: Create release artifacts
      run: |
        mkdir -p release
        cp target/*.jar release/ || echo "No JAR files found"
        cp -r doc release/ || echo "No doc folder found"
        cp -r img release/ || echo "No img folder found"
        cp README.md release/ || echo "No README found"
        cp requirements.txt release/ || echo "No requirements.txt found"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: museum-nusantara-app
        path: release/
        retention-days: 30

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    name: Deploy to Staging
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: museum-nusantara-app
        path: ./artifacts
    
    - name: Deploy to staging environment
      run: |
        echo "Deploying to staging environment..."
        echo "Application artifacts:"
        ls -la ./artifacts/
        # Add your staging deployment commands here

  deploy-production:
    needs: build
    runs-on: ubuntu-latest
    name: Deploy to Production
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: museum-nusantara-app
        path: ./artifacts
    
    - name: Deploy to production environment
      run: |
        echo "Deploying to production environment..."
        echo "Application artifacts:"
        ls -la ./artifacts/
        # Add your production deployment commands here